[debug] [2023-07-19T16:00:51.652Z] ----------------------------------------------------------------------
[debug] [2023-07-19T16:00:51.654Z] Command:       /Users/jacobcable/.nvm/versions/node/v16.14.2/bin/node /Users/jacobcable/.nvm/versions/node/v16.14.2/bin/firebase deploy --only extensions --project=invertase--palm-demo
[debug] [2023-07-19T16:00:51.655Z] CLI Version:   12.0.0
[debug] [2023-07-19T16:00:51.655Z] Platform:      darwin
[debug] [2023-07-19T16:00:51.655Z] Node Version:  v16.14.2
[debug] [2023-07-19T16:00:51.657Z] Time:          Wed Jul 19 2023 17:00:51 GMT+0100 (British Summer Time)
[debug] [2023-07-19T16:00:51.657Z] ----------------------------------------------------------------------
[debug] 
[debug] [2023-07-19T16:00:51.732Z] Object ".extensions" in "firebase.json" has unknown property: {"additionalProperty":"firestore-pgvector-3"}
[debug] [2023-07-19T16:00:51.737Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2023-07-19T16:00:51.738Z] > authorizing via signed-in user (jacobcable94@gmail.com)
[debug] [2023-07-19T16:00:51.738Z] [iam] checking project invertase--palm-demo for permissions ["firebase.projects.get",null]
[debug] [2023-07-19T16:00:51.740Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/invertase--palm-demo:testIamPermissions [none]
[debug] [2023-07-19T16:00:51.741Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/invertase--palm-demo:testIamPermissions x-goog-quota-user=projects/invertase--palm-demo
[debug] [2023-07-19T16:00:51.741Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/invertase--palm-demo:testIamPermissions {"permissions":["firebase.projects.get",null]}
[debug] [2023-07-19T16:00:52.466Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/invertase--palm-demo:testIamPermissions 200
[debug] [2023-07-19T16:00:52.467Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/invertase--palm-demo:testIamPermissions {"permissions":["firebase.projects.get"]}
[debug] [2023-07-19T16:00:52.467Z] [iam] error while checking permissions, command may fail: FirebaseError: Authorization failed. This account is missing the following required permissions on project invertase--palm-demo:

  
[info] 
[info] === Deploying to 'invertase--palm-demo'...
[info] 
[info] i  deploying extensions 
[debug] [2023-07-19T16:00:52.470Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/invertase--palm-demo [none]
[debug] [2023-07-19T16:00:52.847Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/invertase--palm-demo 200
[debug] [2023-07-19T16:00:52.847Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/invertase--palm-demo {"projectId":"invertase--palm-demo","projectNumber":"735953430365","displayName":"Invertase PaLM Extensions Demo","name":"projects/invertase--palm-demo","resources":{"hostingSite":"invertase--palm-demo","storageBucket":"invertase--palm-demo.appspot.com","locationId":"us-central"},"state":"ACTIVE","etag":"1_908d8f3a-ba39-4966-b241-98097c5169a4"}
[info] i  extensions: ensuring required API firebaseextensions.googleapis.com is enabled... 
[debug] [2023-07-19T16:00:52.848Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/invertase--palm-demo/services/firebaseextensions.googleapis.com [none]
[debug] [2023-07-19T16:00:52.848Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/invertase--palm-demo/services/firebaseextensions.googleapis.com x-goog-quota-user=projects/invertase--palm-demo
[debug] [2023-07-19T16:00:53.894Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/invertase--palm-demo/services/firebaseextensions.googleapis.com 200
[debug] [2023-07-19T16:00:53.894Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/invertase--palm-demo/services/firebaseextensions.googleapis.com [omitted]
[info] âœ”  extensions: required API firebaseextensions.googleapis.com is enabled 
[debug] [2023-07-19T16:00:53.895Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2023-07-19T16:00:53.895Z] > authorizing via signed-in user (jacobcable94@gmail.com)
[debug] [2023-07-19T16:00:53.895Z] [iam] checking project invertase--palm-demo for permissions ["firebase.projects.get","firebaseextensions.instances.list"]
[debug] [2023-07-19T16:00:53.896Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/invertase--palm-demo:testIamPermissions [none]
[debug] [2023-07-19T16:00:53.896Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/invertase--palm-demo:testIamPermissions x-goog-quota-user=projects/invertase--palm-demo
[debug] [2023-07-19T16:00:53.896Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/invertase--palm-demo:testIamPermissions {"permissions":["firebase.projects.get","firebaseextensions.instances.list"]}
[debug] [2023-07-19T16:00:54.251Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/invertase--palm-demo:testIamPermissions 200
[debug] [2023-07-19T16:00:54.252Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/invertase--palm-demo:testIamPermissions {"permissions":["firebase.projects.get","firebaseextensions.instances.list"]}
[debug] [2023-07-19T16:00:54.253Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/instances pageSize=100&pageToken=
[debug] [2023-07-19T16:00:55.069Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/instances 200
[debug] [2023-07-19T16:00:55.069Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/instances {}
[debug] [2023-07-19T16:00:55.072Z] Successfully read params from firestore-pgvector-3.env
[debug] [2023-07-19T16:00:55.072Z] Error: ENOENT: no such file or directory, open '/Users/jacobcable/google/llm-gcp/firestore-pgvector/extensions/firestore-pgvector-3.env.default'
[debug] [2023-07-19T16:00:55.072Z] Error: ENOENT: no such file or directory, open '/Users/jacobcable/google/llm-gcp/firestore-pgvector/extensions/firestore-pgvector-3.env.735953430365'
[debug] [2023-07-19T16:00:55.072Z] Error: ENOENT: no such file or directory, open '/Users/jacobcable/google/llm-gcp/firestore-pgvector/extensions/firestore-pgvector-3.env.invertase--palm-demo'
[debug] [2023-07-19T16:00:55.073Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/invertase--palm-demo/adminSdkConfig [none]
[debug] [2023-07-19T16:00:55.334Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/invertase--palm-demo/adminSdkConfig 200
[debug] [2023-07-19T16:00:55.335Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/invertase--palm-demo/adminSdkConfig {"projectId":"invertase--palm-demo","storageBucket":"invertase--palm-demo.appspot.com","locationId":"us-central"}
[debug] [2023-07-19T16:00:55.335Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/invertase--palm-demo [none]
[debug] [2023-07-19T16:00:55.575Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/invertase--palm-demo 200
[debug] [2023-07-19T16:00:55.575Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/invertase--palm-demo {"projectId":"invertase--palm-demo","projectNumber":"735953430365","displayName":"Invertase PaLM Extensions Demo","name":"projects/invertase--palm-demo","resources":{"hostingSite":"invertase--palm-demo","storageBucket":"invertase--palm-demo.appspot.com","locationId":"us-central"},"state":"ACTIVE","etag":"1_908d8f3a-ba39-4966-b241-98097c5169a4"}
[debug] [2023-07-19T16:00:55.577Z] Successfully read params from firestore-pgvector.env
[debug] [2023-07-19T16:00:55.577Z] Error: ENOENT: no such file or directory, open '/Users/jacobcable/google/llm-gcp/firestore-pgvector/extensions/firestore-pgvector.env.default'
[debug] [2023-07-19T16:00:55.577Z] Error: ENOENT: no such file or directory, open '/Users/jacobcable/google/llm-gcp/firestore-pgvector/extensions/firestore-pgvector.env.735953430365'
[debug] [2023-07-19T16:00:55.578Z] Error: ENOENT: no such file or directory, open '/Users/jacobcable/google/llm-gcp/firestore-pgvector/extensions/firestore-pgvector.env.invertase--palm-demo'
[debug] [2023-07-19T16:00:55.578Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/invertase--palm-demo/adminSdkConfig [none]
[debug] [2023-07-19T16:00:55.825Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/invertase--palm-demo/adminSdkConfig 200
[debug] [2023-07-19T16:00:55.825Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/invertase--palm-demo/adminSdkConfig {"projectId":"invertase--palm-demo","storageBucket":"invertase--palm-demo.appspot.com","locationId":"us-central"}
[debug] [2023-07-19T16:00:55.826Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/invertase--palm-demo [none]
[debug] [2023-07-19T16:00:56.094Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/invertase--palm-demo 200
[debug] [2023-07-19T16:00:56.094Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/invertase--palm-demo {"projectId":"invertase--palm-demo","projectNumber":"735953430365","displayName":"Invertase PaLM Extensions Demo","name":"projects/invertase--palm-demo","resources":{"hostingSite":"invertase--palm-demo","storageBucket":"invertase--palm-demo.appspot.com","locationId":"us-central"},"state":"ACTIVE","etag":"1_908d8f3a-ba39-4966-b241-98097c5169a4"}
[warn] The following instances may have been changed in the Firebase console or by another machine since the last deploy from this machine.
	3-ali-chat
	7-ali-chat
	firestore-pgvector-3
If you proceed with this deployment, those changes will be overwritten. To avoid this, run `firebase ext:export` to sync these changes to your local extensions manifest.
[info] i  extensions: ensuring required API compute.googleapis.com is enabled... 
[debug] [2023-07-19T16:01:00.897Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/invertase--palm-demo/services/compute.googleapis.com [none]
[debug] [2023-07-19T16:01:00.897Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/invertase--palm-demo/services/compute.googleapis.com x-goog-quota-user=projects/invertase--palm-demo
[debug] [2023-07-19T16:01:01.963Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/invertase--palm-demo/services/compute.googleapis.com 200
[debug] [2023-07-19T16:01:01.963Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/invertase--palm-demo/services/compute.googleapis.com [omitted]
[info] âœ”  extensions: required API compute.googleapis.com is enabled 
[debug] [2023-07-19T16:01:01.964Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/invertase--palm-demo [none]
[debug] [2023-07-19T16:01:02.211Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/invertase--palm-demo 200
[debug] [2023-07-19T16:01:02.212Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/invertase--palm-demo {"projectId":"invertase--palm-demo","projectNumber":"735953430365","displayName":"Invertase PaLM Extensions Demo","name":"projects/invertase--palm-demo","resources":{"hostingSite":"invertase--palm-demo","storageBucket":"invertase--palm-demo.appspot.com","locationId":"us-central"},"state":"ACTIVE","etag":"1_908d8f3a-ba39-4966-b241-98097c5169a4"}
[debug] [2023-07-19T16:01:02.212Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/invertase--palm-demo:getIamPolicy [none]
[debug] [2023-07-19T16:01:02.956Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/invertase--palm-demo:getIamPolicy 200
[debug] [2023-07-19T16:01:02.957Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/invertase--palm-demo:getIamPolicy {"version":1,"etag":"BwYA2R+2VN0=","bindings":[{"role":"roles/aiplatform.admin","members":["deleted:serviceAccount:ext-bq-llm-item-search@invertase--palm-demo.iam.gserviceaccount.com?uid=116197752047441977067"]},{"role":"roles/aiplatform.serviceAgent","members":["serviceAccount:service-735953430365@gcp-sa-aiplatform.iam.gserviceaccount.com"]},{"role":"roles/aiplatform.user","members":["serviceAccount:ext-dialogflow-palm-agent-1@invertase--palm-demo.iam.gserviceaccount.com","serviceAccount:ext-dialogflow-palm-agent@invertase--palm-demo.iam.gserviceaccount.com"]},{"role":"roles/artifactregistry.serviceAgent","members":["serviceAccount:service-735953430365@gcp-sa-artifactregistry.iam.gserviceaccount.com"]},{"role":"roles/cloudbuild.builds.builder","members":["serviceAccount:735953430365@cloudbuild.gserviceaccount.com"]},{"role":"roles/cloudbuild.serviceAgent","members":["serviceAccount:service-735953430365@gcp-sa-cloudbuild.iam.gserviceaccount.com"]},{"role":"roles/cloudfunctions.admin","members":["serviceAccount:firebase-adminsdk-mtg1g@invertase--palm-demo.iam.gserviceaccount.com"]},{"role":"roles/cloudfunctions.serviceAgent","members":["serviceAccount:service-735953430365@gcf-admin-robot.iam.gserviceaccount.com"]},{"role":"roles/cloudtasks.enqueuer","members":["serviceAccount:invertase--palm-demo@appspot.gserviceaccount.com"]},{"role":"roles/cloudtasks.serviceAgent","members":["serviceAccount:service-735953430365@gcp-sa-cloudtasks.iam.gserviceaccount.com"]},{"role":"roles/compute.serviceAgent","members":["serviceAccount:service-735953430365@compute-system.iam.gserviceaccount.com"]},{"role":"roles/containerregistry.ServiceAgent","members":["serviceAccount:service-735953430365@containerregistry.iam.gserviceaccount.com"]},{"role":"roles/dataflow.serviceAgent","members":["serviceAccount:service-735953430365@dataflow-service-producer-prod.iam.gserviceaccount.com"]},{"role":"roles/datastore.user","members":["serviceAccount:ext-dialogflow-palm-agent-1@invertase--palm-demo.iam.gserviceaccount.com","serviceAccount:ext-dialogflow-palm-agent@invertase--palm-demo.iam.gserviceaccount.com"]},{"role":"roles/dialogflow.serviceAgent","members":["serviceAccount:service-735953430365@gcp-sa-dialogflow.iam.gserviceaccount.com"]},{"role":"roles/editor","members":["serviceAccount:735953430365-compute@developer.gserviceaccount.com","serviceAccount:735953430365@cloudservices.gserviceaccount.com","serviceAccount:invertase--palm-demo@appspot.gserviceaccount.com"]},{"role":"roles/eventarc.eventReceiver","members":["serviceAccount:735953430365-compute@developer.gserviceaccount.com"]},{"role":"roles/firebase.managementServiceAgent","members":["serviceAccount:firebase-service-account@firebase-sa-management.iam.gserviceaccount.com","serviceAccount:service-735953430365@gcp-sa-firebase.iam.gserviceaccount.com"]},{"role":"roles/firebase.sdkAdminServiceAgent","members":["serviceAccount:firebase-adminsdk-mtg1g@invertase--palm-demo.iam.gserviceaccount.com"]},{"role":"roles/firebaseappcheck.admin","members":["serviceAccount:firebase-adminsdk-mtg1g@invertase--palm-demo.iam.gserviceaccount.com"]},{"role":"roles/firebaseauth.admin","members":["serviceAccount:firebase-adminsdk-mtg1g@invertase--palm-demo.iam.gserviceaccount.com"]},{"role":"roles/firebasemods.serviceAgent","members":["serviceAccount:service-735953430365@gcp-sa-firebasemods.iam.gserviceaccount.com"]},{"role":"roles/firebaserules.system","members":["serviceAccount:service-735953430365@firebase-rules.iam.gserviceaccount.com"]},{"role":"roles/firebasestorage.serviceAgent","members":["serviceAccount:service-735953430365@gcp-sa-firebasestorage.iam.gserviceaccount.com"]},{"role":"roles/firestore.serviceAgent","members":["serviceAccount:service-735953430365@gcp-sa-firestore.iam.gserviceaccount.com"]},{"role":"roles/iam.serviceAccountTokenCreator","members":["serviceAccount:firebase-adminsdk-mtg1g@invertase--palm-demo.iam.gserviceaccount.com"]},{"role":"roles/iam.serviceAccountUser","members":["serviceAccount:735953430365@cloudbuild.gserviceaccount.com"]},{"role":"roles/notebooks.serviceAgent","members":["serviceAccount:service-735953430365@gcp-sa-notebooks.iam.gserviceaccount.com"]},{"role":"roles/owner","members":["deleted:serviceAccount:ext-bq-llm-item-search@invertase--palm-demo.iam.gserviceaccount.com?uid=114288824205712334861","user:chgill@google.com","user:darren@invertase.io","user:elliot@invertase.io","user:huangjeff@google.com","user:jacob@invertase.io","user:jacobcable94@gmail.com","user:mais@invertase.io","user:mathewray@google.com"]},{"role":"roles/pubsub.serviceAgent","members":["serviceAccount:service-735953430365@gcp-sa-pubsub.iam.gserviceaccount.com"]},{"role":"roles/run.admin","members":["serviceAccount:735953430365@cloudbuild.gserviceaccount.com"]},{"role":"roles/run.serviceAgent","members":["serviceAccount:service-735953430365@serverless-robot-prod.iam.gserviceaccount.com"]},{"role":"roles/storage.admin","members":["serviceAccount:firebase-adminsdk-mtg1g@invertase--palm-demo.iam.gserviceaccount.com"]}]}
[debug] [2023-07-19T16:01:02.957Z] Compute Service API Agent IAM policy OK
[info] The following extension instances will be created:
	firestore-pgvector-3 (Installed from local source)
	firestore-pgvector (Installed from local source)

[debug] [2023-07-19T16:01:02.957Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2023-07-19T16:01:02.958Z] > authorizing via signed-in user (jacobcable94@gmail.com)
[debug] [2023-07-19T16:01:02.958Z] [iam] checking project invertase--palm-demo for permissions ["firebase.projects.get","firebaseextensions.instances.create"]
[debug] [2023-07-19T16:01:02.958Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/invertase--palm-demo:testIamPermissions [none]
[debug] [2023-07-19T16:01:02.958Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/invertase--palm-demo:testIamPermissions x-goog-quota-user=projects/invertase--palm-demo
[debug] [2023-07-19T16:01:02.958Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/invertase--palm-demo:testIamPermissions {"permissions":["firebase.projects.get","firebaseextensions.instances.create"]}
[debug] [2023-07-19T16:01:03.159Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/invertase--palm-demo:testIamPermissions 200
[debug] [2023-07-19T16:01:03.159Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/invertase--palm-demo:testIamPermissions {"permissions":["firebase.projects.get","firebaseextensions.instances.create"]}
[debug] [2023-07-19T16:01:03.160Z] Checking if latest AppDeveloper TOS has been accepted by invertase--palm-demo...
[info] i  extensions: By installing an extension instance onto a Firebase project, you accept the Firebase Extensions User Terms of Service: https://firebase.google.com/terms/extensions/user 
[debug] [2023-07-19T16:01:03.160Z] >>> [apiv2][query] GET https://firebaseextensionstos-pa.googleapis.com/v1/projects/invertase--palm-demo/appdevtos [none]
[debug] [2023-07-19T16:01:03.978Z] <<< [apiv2][status] GET https://firebaseextensionstos-pa.googleapis.com/v1/projects/invertase--palm-demo/appdevtos 200
[debug] [2023-07-19T16:01:03.978Z] <<< [apiv2][body] GET https://firebaseextensionstos-pa.googleapis.com/v1/projects/invertase--palm-demo/appdevtos {"name":"projects/invertase--palm-demo/appdevtos","lastAcceptedVersion":"v1","lastAcceptedTime":"2023-07-19T15:55:07.024393Z","latestTosVersion":"v1"}
[debug] [2023-07-19T16:01:03.978Z] User Terms of Service aready accepted on project invertase--palm-demo.
[debug] [2023-07-19T16:01:03.979Z] >>> [apiv2][query] POST https://firebaseextensionstos-pa.googleapis.com/v1/projects/invertase--palm-demo/appdevtos:accept [none]
[debug] [2023-07-19T16:01:03.979Z] >>> [apiv2][body] POST https://firebaseextensionstos-pa.googleapis.com/v1/projects/invertase--palm-demo/appdevtos:accept {"name":"project/invertase--palm-demo/appdevtos","instanceId":"firestore-pgvector-3","version":"v1"}
[debug] [2023-07-19T16:01:03.981Z] >>> [apiv2][query] POST https://firebaseextensionstos-pa.googleapis.com/v1/projects/invertase--palm-demo/appdevtos:accept [none]
[debug] [2023-07-19T16:01:03.981Z] >>> [apiv2][body] POST https://firebaseextensionstos-pa.googleapis.com/v1/projects/invertase--palm-demo/appdevtos:accept {"name":"project/invertase--palm-demo/appdevtos","instanceId":"firestore-pgvector","version":"v1"}
[debug] [2023-07-19T16:01:04.697Z] <<< [apiv2][status] POST https://firebaseextensionstos-pa.googleapis.com/v1/projects/invertase--palm-demo/appdevtos:accept 200
[debug] [2023-07-19T16:01:04.697Z] <<< [apiv2][body] POST https://firebaseextensionstos-pa.googleapis.com/v1/projects/invertase--palm-demo/appdevtos:accept {"name":"projects/invertase--palm-demo/appdevtos","lastAcceptedVersion":"v1","lastAcceptedTime":"2023-07-19T16:01:04.689543Z","latestTosVersion":"v1"}
[debug] [2023-07-19T16:01:04.698Z] <<< [apiv2][status] POST https://firebaseextensionstos-pa.googleapis.com/v1/projects/invertase--palm-demo/appdevtos:accept 200
[debug] [2023-07-19T16:01:04.698Z] <<< [apiv2][body] POST https://firebaseextensionstos-pa.googleapis.com/v1/projects/invertase--palm-demo/appdevtos:accept {"name":"projects/invertase--palm-demo/appdevtos","lastAcceptedVersion":"v1","lastAcceptedTime":"2023-07-19T16:01:04.689543Z","latestTosVersion":"v1"}
[debug] [2023-07-19T16:01:04.698Z] >>> [apiv2][query] GET https://cloudbilling.googleapis.com/v1/projects/invertase--palm-demo/billingInfo [none]
[debug] [2023-07-19T16:01:05.092Z] <<< [apiv2][status] GET https://cloudbilling.googleapis.com/v1/projects/invertase--palm-demo/billingInfo 200
[debug] [2023-07-19T16:01:05.092Z] <<< [apiv2][body] GET https://cloudbilling.googleapis.com/v1/projects/invertase--palm-demo/billingInfo {"name":"projects/invertase--palm-demo/billingInfo","projectId":"invertase--palm-demo","billingAccountName":"billingAccounts/00A04E-69280E-7799A2","billingEnabled":true}
[debug] [2023-07-19T16:01:05.240Z] Archived 78.62 KB in ..
[debug] [2023-07-19T16:01:05.241Z] >>> [apiv2][query] PUT https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--68448-26eVmAJ9F1iM-.zip [none]
[debug] [2023-07-19T16:01:05.242Z] >>> [apiv2][body] PUT https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--68448-26eVmAJ9F1iM-.zip [stream]
[debug] [2023-07-19T16:01:05.244Z] Archived 78.62 KB in ..
[debug] [2023-07-19T16:01:05.244Z] >>> [apiv2][query] PUT https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--68448-6UEfIPjwHbaP-.zip [none]
[debug] [2023-07-19T16:01:05.244Z] >>> [apiv2][body] PUT https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--68448-6UEfIPjwHbaP-.zip [stream]
[debug] [2023-07-19T16:01:05.734Z] <<< [apiv2][status] PUT https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--68448-6UEfIPjwHbaP-.zip 200
[debug] [2023-07-19T16:01:05.735Z] <<< [apiv2][body] PUT https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--68448-6UEfIPjwHbaP-.zip undefined
[debug] [2023-07-19T16:01:05.735Z] >>> [apiv2][query] POST https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/sources/ [none]
[debug] [2023-07-19T16:01:05.736Z] >>> [apiv2][body] POST https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/sources/ {"packageUri":"https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--68448-6UEfIPjwHbaP-.zip?alt=media","extensionRoot":"/"}
[debug] [2023-07-19T16:01:05.743Z] <<< [apiv2][status] PUT https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--68448-26eVmAJ9F1iM-.zip 200
[debug] [2023-07-19T16:01:05.743Z] <<< [apiv2][body] PUT https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--68448-26eVmAJ9F1iM-.zip undefined
[debug] [2023-07-19T16:01:05.744Z] >>> [apiv2][query] POST https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/sources/ [none]
[debug] [2023-07-19T16:01:05.744Z] >>> [apiv2][body] POST https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/sources/ {"packageUri":"https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--68448-26eVmAJ9F1iM-.zip?alt=media","extensionRoot":"/"}
[debug] [2023-07-19T16:01:06.434Z] <<< [apiv2][status] POST https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/sources/ 200
[debug] [2023-07-19T16:01:06.434Z] <<< [apiv2][body] POST https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/sources/ {"name":"projects/invertase--palm-demo/operations/151a52a0-9abe-4a7a-90c3-f7e50c1f3a4b","metadata":{"@type":"type.googleapis.com/google.firebase.extensions.v1beta.ExtensionSource","name":"projects/invertase--palm-demo/sources/81322740-210c-42c6-b96e-64cb9978e471","packageUri":"https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--68448-26eVmAJ9F1iM-.zip?alt=media","extensionRoot":"/","lastOperationName":"projects/invertase--palm-demo/operations/151a52a0-9abe-4a7a-90c3-f7e50c1f3a4b"}}
[debug] [2023-07-19T16:01:06.435Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/151a52a0-9abe-4a7a-90c3-f7e50c1f3a4b [none]
[debug] [2023-07-19T16:01:06.436Z] <<< [apiv2][status] POST https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/sources/ 200
[debug] [2023-07-19T16:01:06.436Z] <<< [apiv2][body] POST https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/sources/ {"name":"projects/invertase--palm-demo/operations/841aef2a-9ffa-4fdd-8840-9aeba8263ee0","metadata":{"@type":"type.googleapis.com/google.firebase.extensions.v1beta.ExtensionSource","name":"projects/invertase--palm-demo/sources/ad946303-7fba-410e-88bf-d131ca370fea","packageUri":"https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--68448-6UEfIPjwHbaP-.zip?alt=media","extensionRoot":"/","lastOperationName":"projects/invertase--palm-demo/operations/841aef2a-9ffa-4fdd-8840-9aeba8263ee0"}}
[debug] [2023-07-19T16:01:06.436Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/841aef2a-9ffa-4fdd-8840-9aeba8263ee0 [none]
[debug] [2023-07-19T16:01:07.974Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/151a52a0-9abe-4a7a-90c3-f7e50c1f3a4b 200
[debug] [2023-07-19T16:01:07.975Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/151a52a0-9abe-4a7a-90c3-f7e50c1f3a4b {"name":"projects/invertase--palm-demo/operations/151a52a0-9abe-4a7a-90c3-f7e50c1f3a4b","done":true,"response":{"@type":"type.googleapis.com/google.firebase.extensions.v1beta.ExtensionSource","name":"projects/invertase--palm-demo/sources/81322740-210c-42c6-b96e-64cb9978e471","packageUri":"https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--68448-26eVmAJ9F1iM-.zip?alt=media","hash":"7b04f7d75148749d6d5eb9227099b017344d30f5660232b409ce6bc8c2613d66","extensionRoot":"/","spec":{"specVersion":"v1beta","name":"firestore-pgvector","version":"0.0.1","description":"Search for semantically similar text documents in Firestore with PaLM API and Cloud SQL using pgvector","apis":[{"apiName":"run.googleapis.com","reason":"Powers v2 Cloud Functions"}],"roles":[{"role":"datastore.user","reason":"This extension requires read/write access to Firestore."},{"role":"aiplatform.user","reason":"This extension requires access to Vertex AI to create, update and query a Vertex Matching Engine index."},{"role":"cloudsql.admin","reason":"Needs to use Cloud SQL"}],"resources":[{"name":"backfilltrigger","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\nlocation: ${LOCATION}\nruntime: python311\ntaskQueueTrigger:\n  retryConfig:\n    maxAttempts: 50\ntimeout: 540s\n","description":"Sets up table in cloud sql with pgvector extension and triggers backfill of firestore collection","deletionPolicy":"DELETE"},{"name":"queryindex","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\nhttpsTrigger: {}\nlocation: ${LOCATION}\nruntime: python311\ntimeout: 540s\n","description":"A function that queries the Cloud SQL table for semantically similar text","deletionPolicy":"DELETE"},{"name":"backfillembeddingtask","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\nlocation: ${LOCATION}\nruntime: python311\ntaskQueueTrigger:\n  retryConfig:\n    maxAttempts: 50\ntimeout: 540s\n","description":"A task-triggered function that gets called before a Vertex Matching Engine index is created. It backfills embeddings for all documents in the collection.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com","sourceUrl":"https://github.com","params":[{"param":"COLLECTION_NAME","label":"Collection to index","type":"STRING","description":"The Firestore collection to include in the search index.","required":true,"default":"pgvector","immutable":true},{"param":"TASK_COLLECTION_NAME","label":"Task Collection Name","type":"STRING","description":"The Firestore collection to keep track of the overall task of uploading embeddings","required":true,"default":"pgvector_task","immutable":true},{"param":"EMBEDDINGS_COLLECTION_NAME","label":"Embeddings Collection Name","type":"STRING","description":"The Firestore collection to keep track of the chunks of embeddings processed by tasks","required":true,"default":"pgvector_embeddings","immutable":true},{"param":"FIELDS","label":"Fields in a Document to index","type":"STRING","description":"Comma-separated list of field names to include in the search index. If you leave this blank, all fields will be indexed.","validationRegex":"^[a-zA-Z0-9_]+(,[a-zA-Z0-9_]+)*$","validationErrorMessage":"Field names may only use upper and lowercase letters from A to Z, underscores, or numbers, and may only be separated by commas. Trailing commas and empty variable names are not allowed.","immutable":true},{"param":"CLOUD_SQL_INSTANCE_NAME","label":"Cloud SQL Instance Name","type":"STRING","description":"The name of the cloud SQL instance to use for the index.","required":true,"immutable":true},{"param":"CLOUD_SQL_PASSWORD","label":"Cloud SQL Instance Password","type":"SECRET","description":"The password of the cloud SQL instance to use.","required":true,"immutable":true},{"param":"CLOUD_SQL_DB","label":"Cloud SQL DB Name","type":"STRING","description":"The name of the cloud SQL database","required":true,"default":"postgres","immutable":true},{"param":"LOCATION","label":"Location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west1","label":"Oregon (us-west1)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-south1","label":"Singapore (asia-southeast1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"immutable":true},{"param":"CLOUD_SQL_LOCATION","label":"Cloud SQL database location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west1","label":"Oregon (us-west1)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-south1","label":"Singapore (asia-southeast1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"immutable":true}],"readmeContent":"Documenting steps\n\n1. go to cloud console for your project, Cloud SQL, create instance of postgresql, e.g firestore-pgvector-demo\n\n2. use populate_firestore script in scripts.py\n\n3. `gcloud sql connect firestore-pgvector-demo --user=postgres ` in terminal to connect\n\n4. `CREATE EXTENSION IF NOT EXISTS vector;`\n\n5.\n```CREATE TABLE embeddings(\n    id INTEGER,\n    embedding vector(768)\n);\n```\n\nnow we have the required datatypes and table.\n\nCurrently in `main.py` there is a script to query using pgvector, but this assumes the environment is all set up etc. WIP to get this down.\n______\n\nDevelopment:\n\nUsed `poetry` to track dependencies, but not needed. You will have to `python3 -m venv venv` and `source venv/bin/activate`. Currently running scripts from `firestore-pgvector` directory, but this will change.","lifecycleEvents":[{"stage":"ON_INSTALL","processingMessage":"backfill documents into pgvector cloud sql","taskQueueTriggerFunction":"backfilltrigger"}],"displayName":"Firestore pgvector semantic search","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zÅ¾Ã -Ã¿][A-Za-zÅ½Å¾Ã€-Ã¿0-9_-]{0,62}:[A-Za-zÅ½Å¾Ã€-Ã¿0-9_-]{0,63},\\s*)*([a-zÅ¾Ã -Ã¿][A-Za-zÅ½Å¾Ã€-Ã¿0-9_-]{0,62}:[A-Za-zÅ½Å¾Ã€-Ã¿0-9_-]{0,63})$","advanced":true}],"tags":["ai","search","semantic-search","vector-search","text-search","nlp","llm","large-language-models","palm","embeddings","google-ai"]},"fetchTime":"2023-07-19T16:01:07.620619Z","lastOperationName":"projects/invertase--palm-demo/operations/151a52a0-9abe-4a7a-90c3-f7e50c1f3a4b","state":"ACTIVE"}}
[debug] [2023-07-19T16:01:07.975Z] Created new Extension Source %s projects/invertase--palm-demo/sources/81322740-210c-42c6-b96e-64cb9978e471
[debug] [2023-07-19T16:01:07.976Z] >>> [apiv2][query] DELETE https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--68448-26eVmAJ9F1iM-.zip [none]
[debug] [2023-07-19T16:01:08.047Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/841aef2a-9ffa-4fdd-8840-9aeba8263ee0 200
[debug] [2023-07-19T16:01:08.047Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/841aef2a-9ffa-4fdd-8840-9aeba8263ee0 {"name":"projects/invertase--palm-demo/operations/841aef2a-9ffa-4fdd-8840-9aeba8263ee0","done":true,"response":{"@type":"type.googleapis.com/google.firebase.extensions.v1beta.ExtensionSource","name":"projects/invertase--palm-demo/sources/ad946303-7fba-410e-88bf-d131ca370fea","packageUri":"https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--68448-6UEfIPjwHbaP-.zip?alt=media","hash":"c8bca849048c9703142ad2e28ea5dbaec0af865476cf0ce51d59147f43dbf0d9","extensionRoot":"/","spec":{"specVersion":"v1beta","name":"firestore-pgvector","version":"0.0.1","description":"Search for semantically similar text documents in Firestore with PaLM API and Cloud SQL using pgvector","apis":[{"apiName":"run.googleapis.com","reason":"Powers v2 Cloud Functions"}],"roles":[{"role":"datastore.user","reason":"This extension requires read/write access to Firestore."},{"role":"aiplatform.user","reason":"This extension requires access to Vertex AI to create, update and query a Vertex Matching Engine index."},{"role":"cloudsql.admin","reason":"Needs to use Cloud SQL"}],"resources":[{"name":"backfilltrigger","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\nlocation: ${LOCATION}\nruntime: python311\ntaskQueueTrigger:\n  retryConfig:\n    maxAttempts: 50\ntimeout: 540s\n","description":"Sets up table in cloud sql with pgvector extension and triggers backfill of firestore collection","deletionPolicy":"DELETE"},{"name":"queryindex","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\nhttpsTrigger: {}\nlocation: ${LOCATION}\nruntime: python311\ntimeout: 540s\n","description":"A function that queries the Cloud SQL table for semantically similar text","deletionPolicy":"DELETE"},{"name":"backfillembeddingtask","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\nlocation: ${LOCATION}\nruntime: python311\ntaskQueueTrigger:\n  retryConfig:\n    maxAttempts: 50\ntimeout: 540s\n","description":"A task-triggered function that gets called before a Vertex Matching Engine index is created. It backfills embeddings for all documents in the collection.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com","sourceUrl":"https://github.com","params":[{"param":"COLLECTION_NAME","label":"Collection to index","type":"STRING","description":"The Firestore collection to include in the search index.","required":true,"default":"pgvector","immutable":true},{"param":"TASK_COLLECTION_NAME","label":"Task Collection Name","type":"STRING","description":"The Firestore collection to keep track of the overall task of uploading embeddings","required":true,"default":"pgvector_task","immutable":true},{"param":"EMBEDDINGS_COLLECTION_NAME","label":"Embeddings Collection Name","type":"STRING","description":"The Firestore collection to keep track of the chunks of embeddings processed by tasks","required":true,"default":"pgvector_embeddings","immutable":true},{"param":"FIELDS","label":"Fields in a Document to index","type":"STRING","description":"Comma-separated list of field names to include in the search index. If you leave this blank, all fields will be indexed.","validationRegex":"^[a-zA-Z0-9_]+(,[a-zA-Z0-9_]+)*$","validationErrorMessage":"Field names may only use upper and lowercase letters from A to Z, underscores, or numbers, and may only be separated by commas. Trailing commas and empty variable names are not allowed.","immutable":true},{"param":"CLOUD_SQL_INSTANCE_NAME","label":"Cloud SQL Instance Name","type":"STRING","description":"The name of the cloud SQL instance to use for the index.","required":true,"immutable":true},{"param":"CLOUD_SQL_PASSWORD","label":"Cloud SQL Instance Password","type":"SECRET","description":"The password of the cloud SQL instance to use.","required":true,"immutable":true},{"param":"CLOUD_SQL_DB","label":"Cloud SQL DB Name","type":"STRING","description":"The name of the cloud SQL database","required":true,"default":"postgres","immutable":true},{"param":"LOCATION","label":"Location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west1","label":"Oregon (us-west1)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-south1","label":"Singapore (asia-southeast1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"immutable":true},{"param":"CLOUD_SQL_LOCATION","label":"Cloud SQL database location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west1","label":"Oregon (us-west1)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-south1","label":"Singapore (asia-southeast1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"immutable":true}],"readmeContent":"Documenting steps\n\n1. go to cloud console for your project, Cloud SQL, create instance of postgresql, e.g firestore-pgvector-demo\n\n2. use populate_firestore script in scripts.py\n\n3. `gcloud sql connect firestore-pgvector-demo --user=postgres ` in terminal to connect\n\n4. `CREATE EXTENSION IF NOT EXISTS vector;`\n\n5.\n```CREATE TABLE embeddings(\n    id INTEGER,\n    embedding vector(768)\n);\n```\n\nnow we have the required datatypes and table.\n\nCurrently in `main.py` there is a script to query using pgvector, but this assumes the environment is all set up etc. WIP to get this down.\n______\n\nDevelopment:\n\nUsed `poetry` to track dependencies, but not needed. You will have to `python3 -m venv venv` and `source venv/bin/activate`. Currently running scripts from `firestore-pgvector` directory, but this will change.","lifecycleEvents":[{"stage":"ON_INSTALL","processingMessage":"backfill documents into pgvector cloud sql","taskQueueTriggerFunction":"backfilltrigger"}],"displayName":"Firestore pgvector semantic search","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zÅ¾Ã -Ã¿][A-Za-zÅ½Å¾Ã€-Ã¿0-9_-]{0,62}:[A-Za-zÅ½Å¾Ã€-Ã¿0-9_-]{0,63},\\s*)*([a-zÅ¾Ã -Ã¿][A-Za-zÅ½Å¾Ã€-Ã¿0-9_-]{0,62}:[A-Za-zÅ½Å¾Ã€-Ã¿0-9_-]{0,63})$","advanced":true}],"tags":["ai","search","semantic-search","vector-search","text-search","nlp","llm","large-language-models","palm","embeddings","google-ai"]},"fetchTime":"2023-07-19T16:01:07.596110Z","lastOperationName":"projects/invertase--palm-demo/operations/841aef2a-9ffa-4fdd-8840-9aeba8263ee0","state":"ACTIVE"}}
[debug] [2023-07-19T16:01:08.048Z] Created new Extension Source %s projects/invertase--palm-demo/sources/ad946303-7fba-410e-88bf-d131ca370fea
[debug] [2023-07-19T16:01:08.048Z] >>> [apiv2][query] DELETE https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--68448-6UEfIPjwHbaP-.zip [none]
[debug] [2023-07-19T16:01:08.327Z] <<< [apiv2][status] DELETE https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--68448-26eVmAJ9F1iM-.zip 204
[debug] [2023-07-19T16:01:08.327Z] <<< [apiv2][body] DELETE https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--68448-26eVmAJ9F1iM-.zip undefined
[debug] [2023-07-19T16:01:08.327Z] Cleaned up uploaded source archive
[debug] [2023-07-19T16:01:08.327Z] >>> [apiv2][query] POST https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/instances/ validateOnly=false
[debug] [2023-07-19T16:01:08.328Z] >>> [apiv2][body] POST https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/instances/ {"name":"projects/invertase--palm-demo/instances/firestore-pgvector","config":{"params":{"CLOUD_SQL_DB":"postgres","CLOUD_SQL_INSTANCE_NAME":"firestore-pgvector-demo","CLOUD_SQL_LOCATION":"us-central1","CLOUD_SQL_PASSWORD":"projects/735953430365/secrets/ext-firestore-pgvector-CLOUD_SQL_PASSWORD/versions/1","COLLECTION_NAME":"pgvector","EMBEDDINGS_COLLECTION_NAME":"pgvector_embeddings","FIELDS":"title","LOCATION":"us-central1","TASK_COLLECTION_NAME":"pgvector_task"},"systemParams":{},"source":{"name":"projects/invertase--palm-demo/sources/81322740-210c-42c6-b96e-64cb9978e471"}}}
[debug] [2023-07-19T16:01:08.441Z] <<< [apiv2][status] DELETE https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--68448-6UEfIPjwHbaP-.zip 204
[debug] [2023-07-19T16:01:08.442Z] <<< [apiv2][body] DELETE https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--68448-6UEfIPjwHbaP-.zip undefined
[debug] [2023-07-19T16:01:08.442Z] Cleaned up uploaded source archive
[debug] [2023-07-19T16:01:08.442Z] >>> [apiv2][query] POST https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/instances/ validateOnly=false
[debug] [2023-07-19T16:01:08.442Z] >>> [apiv2][body] POST https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/instances/ {"name":"projects/invertase--palm-demo/instances/firestore-pgvector-3","config":{"params":{"CLOUD_SQL_DB":"postgres","CLOUD_SQL_INSTANCE_NAME":"firestore-pgvector-demo","CLOUD_SQL_LOCATION":"us-central1","CLOUD_SQL_PASSWORD":"projects/735953430365/secrets/ext-firestore-pgvector-CLOUD_SQL_PASSWORD/versions/1","COLLECTION_NAME":"pgvector","EMBEDDINGS_COLLECTION_NAME":"pgvector_embeddings","FIELDS":"title","LOCATION":"us-central1","TASK_COLLECTION_NAME":"pgvector_task"},"systemParams":{},"source":{"name":"projects/invertase--palm-demo/sources/ad946303-7fba-410e-88bf-d131ca370fea"}}}
[debug] [2023-07-19T16:01:09.403Z] <<< [apiv2][status] POST https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/instances/ 200
[debug] [2023-07-19T16:01:09.403Z] <<< [apiv2][body] POST https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/instances/ {"name":"projects/invertase--palm-demo/operations/40e14ffc-3a93-4741-a093-b2dfa3552771","metadata":{"@type":"type.googleapis.com/google.firebase.extensions.v1beta.ExtensionInstance","name":"projects/invertase--palm-demo/instances/firestore-pgvector","state":"DEPLOYING","config":{"name":"projects/invertase--palm-demo/instances/firestore-pgvector/configurations/46bbc492-82e2-45b5-aee1-fa1144988aa8","source":{"name":"projects/invertase--palm-demo/sources/81322740-210c-42c6-b96e-64cb9978e471","packageUri":"https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--68448-26eVmAJ9F1iM-.zip?alt=media","hash":"7b04f7d75148749d6d5eb9227099b017344d30f5660232b409ce6bc8c2613d66","extensionRoot":"/","spec":{"specVersion":"v1beta","name":"firestore-pgvector","version":"0.0.1","description":"Search for semantically similar text documents in Firestore with PaLM API and Cloud SQL using pgvector","apis":[{"apiName":"run.googleapis.com","reason":"Powers v2 Cloud Functions"}],"roles":[{"role":"datastore.user","reason":"This extension requires read/write access to Firestore."},{"role":"aiplatform.user","reason":"This extension requires access to Vertex AI to create, update and query a Vertex Matching Engine index."},{"role":"cloudsql.admin","reason":"Needs to use Cloud SQL"}],"resources":[{"name":"backfilltrigger","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\nlocation: ${LOCATION}\nruntime: python311\ntaskQueueTrigger:\n  retryConfig:\n    maxAttempts: 50\ntimeout: 540s\n","description":"Sets up table in cloud sql with pgvector extension and triggers backfill of firestore collection","deletionPolicy":"DELETE"},{"name":"queryindex","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\nhttpsTrigger: {}\nlocation: ${LOCATION}\nruntime: python311\ntimeout: 540s\n","description":"A function that queries the Cloud SQL table for semantically similar text","deletionPolicy":"DELETE"},{"name":"backfillembeddingtask","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\nlocation: ${LOCATION}\nruntime: python311\ntaskQueueTrigger:\n  retryConfig:\n    maxAttempts: 50\ntimeout: 540s\n","description":"A task-triggered function that gets called before a Vertex Matching Engine index is created. It backfills embeddings for all documents in the collection.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com","sourceUrl":"https://github.com","params":[{"param":"COLLECTION_NAME","label":"Collection to index","type":"STRING","description":"The Firestore collection to include in the search index.","required":true,"default":"pgvector","immutable":true},{"param":"TASK_COLLECTION_NAME","label":"Task Collection Name","type":"STRING","description":"The Firestore collection to keep track of the overall task of uploading embeddings","required":true,"default":"pgvector_task","immutable":true},{"param":"EMBEDDINGS_COLLECTION_NAME","label":"Embeddings Collection Name","type":"STRING","description":"The Firestore collection to keep track of the chunks of embeddings processed by tasks","required":true,"default":"pgvector_embeddings","immutable":true},{"param":"FIELDS","label":"Fields in a Document to index","type":"STRING","description":"Comma-separated list of field names to include in the search index. If you leave this blank, all fields will be indexed.","validationRegex":"^[a-zA-Z0-9_]+(,[a-zA-Z0-9_]+)*$","validationErrorMessage":"Field names may only use upper and lowercase letters from A to Z, underscores, or numbers, and may only be separated by commas. Trailing commas and empty variable names are not allowed.","immutable":true},{"param":"CLOUD_SQL_INSTANCE_NAME","label":"Cloud SQL Instance Name","type":"STRING","description":"The name of the cloud SQL instance to use for the index.","required":true,"immutable":true},{"param":"CLOUD_SQL_PASSWORD","label":"Cloud SQL Instance Password","type":"SECRET","description":"The password of the cloud SQL instance to use.","required":true,"immutable":true},{"param":"CLOUD_SQL_DB","label":"Cloud SQL DB Name","type":"STRING","description":"The name of the cloud SQL database","required":true,"default":"postgres","immutable":true},{"param":"LOCATION","label":"Location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west1","label":"Oregon (us-west1)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-south1","label":"Singapore (asia-southeast1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"immutable":true},{"param":"CLOUD_SQL_LOCATION","label":"Cloud SQL database location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west1","label":"Oregon (us-west1)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-south1","label":"Singapore (asia-southeast1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"immutable":true}],"readmeContent":"Documenting steps\n\n1. go to cloud console for your project, Cloud SQL, create instance of postgresql, e.g firestore-pgvector-demo\n\n2. use populate_firestore script in scripts.py\n\n3. `gcloud sql connect firestore-pgvector-demo --user=postgres ` in terminal to connect\n\n4. `CREATE EXTENSION IF NOT EXISTS vector;`\n\n5.\n```CREATE TABLE embeddings(\n    id INTEGER,\n    embedding vector(768)\n);\n```\n\nnow we have the required datatypes and table.\n\nCurrently in `main.py` there is a script to query using pgvector, but this assumes the environment is all set up etc. WIP to get this down.\n______\n\nDevelopment:\n\nUsed `poetry` to track dependencies, but not needed. You will have to `python3 -m venv venv` and `source venv/bin/activate`. Currently running scripts from `firestore-pgvector` directory, but this will change.","lifecycleEvents":[{"stage":"ON_INSTALL","processingMessage":"backfill documents into pgvector cloud sql","taskQueueTriggerFunction":"backfilltrigger"}],"displayName":"Firestore pgvector semantic search","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zÅ¾Ã -Ã¿][A-Za-zÅ½Å¾Ã€-Ã¿0-9_-]{0,62}:[A-Za-zÅ½Å¾Ã€-Ã¿0-9_-]{0,63},\\s*)*([a-zÅ¾Ã -Ã¿][A-Za-zÅ½Å¾Ã€-Ã¿0-9_-]{0,62}:[A-Za-zÅ½Å¾Ã€-Ã¿0-9_-]{0,63})$","advanced":true}],"tags":["ai","search","semantic-search","vector-search","text-search","nlp","llm","large-language-models","palm","embeddings","google-ai"]},"fetchTime":"2023-07-19T16:01:07.620619Z","lastOperationName":"projects/invertase--palm-demo/operations/151a52a0-9abe-4a7a-90c3-f7e50c1f3a4b","state":"ACTIVE"},"params":{"LOCATION":"us-central1","CLOUD_SQL_LOCATION":"us-central1","TASK_COLLECTION_NAME":"pgvector_task","EMBEDDINGS_COLLECTION_NAME":"pgvector_embeddings","CLOUD_SQL_INSTANCE_NAME":"firestore-pgvector-demo","CLOUD_SQL_PASSWORD":"projects/735953430365/secrets/ext-firestore-pgvector-CLOUD_SQL_PASSWORD/versions/1","CLOUD_SQL_DB":"postgres","COLLECTION_NAME":"pgvector","FIELDS":"title"},"systemParams":{"firebaseextensions.v1beta.function/memory":"256","firebaseextensions.v1beta.function/vpcConnectorEgressSettings":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","firebaseextensions.v1beta.function/minInstances":"0","firebaseextensions.v1beta.function/maxInstances":"3000"}},"lastOperationName":"projects/invertase--palm-demo/operations/40e14ffc-3a93-4741-a093-b2dfa3552771","serviceAccountEmail":"ext-firestore-pgvector@invertase--palm-demo.iam.gserviceaccount.com","lastOperationType":"CREATE","etag":"952adf0e0b7b55510ca220f329d71e9558111243c2ffe74e70caef995214b5f5"}}
[debug] [2023-07-19T16:01:09.404Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/40e14ffc-3a93-4741-a093-b2dfa3552771 [none]
[debug] [2023-07-19T16:01:09.458Z] <<< [apiv2][status] POST https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/instances/ 200
[debug] [2023-07-19T16:01:09.458Z] <<< [apiv2][body] POST https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/instances/ {"name":"projects/invertase--palm-demo/operations/495fbed8-5de0-4dbf-b342-cb15eaad58e2","metadata":{"@type":"type.googleapis.com/google.firebase.extensions.v1beta.ExtensionInstance","name":"projects/invertase--palm-demo/instances/firestore-pgvector-3","state":"DEPLOYING","config":{"name":"projects/invertase--palm-demo/instances/firestore-pgvector-3/configurations/ed410fee-ce20-44b2-95be-7ebfcd6f77fa","source":{"name":"projects/invertase--palm-demo/sources/ad946303-7fba-410e-88bf-d131ca370fea","packageUri":"https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive--68448-6UEfIPjwHbaP-.zip?alt=media","hash":"c8bca849048c9703142ad2e28ea5dbaec0af865476cf0ce51d59147f43dbf0d9","extensionRoot":"/","spec":{"specVersion":"v1beta","name":"firestore-pgvector","version":"0.0.1","description":"Search for semantically similar text documents in Firestore with PaLM API and Cloud SQL using pgvector","apis":[{"apiName":"run.googleapis.com","reason":"Powers v2 Cloud Functions"}],"roles":[{"role":"datastore.user","reason":"This extension requires read/write access to Firestore."},{"role":"aiplatform.user","reason":"This extension requires access to Vertex AI to create, update and query a Vertex Matching Engine index."},{"role":"cloudsql.admin","reason":"Needs to use Cloud SQL"}],"resources":[{"name":"backfilltrigger","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\nlocation: ${LOCATION}\nruntime: python311\ntaskQueueTrigger:\n  retryConfig:\n    maxAttempts: 50\ntimeout: 540s\n","description":"Sets up table in cloud sql with pgvector extension and triggers backfill of firestore collection","deletionPolicy":"DELETE"},{"name":"queryindex","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\nhttpsTrigger: {}\nlocation: ${LOCATION}\nruntime: python311\ntimeout: 540s\n","description":"A function that queries the Cloud SQL table for semantically similar text","deletionPolicy":"DELETE"},{"name":"backfillembeddingtask","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\nlocation: ${LOCATION}\nruntime: python311\ntaskQueueTrigger:\n  retryConfig:\n    maxAttempts: 50\ntimeout: 540s\n","description":"A task-triggered function that gets called before a Vertex Matching Engine index is created. It backfills embeddings for all documents in the collection.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com","sourceUrl":"https://github.com","params":[{"param":"COLLECTION_NAME","label":"Collection to index","type":"STRING","description":"The Firestore collection to include in the search index.","required":true,"default":"pgvector","immutable":true},{"param":"TASK_COLLECTION_NAME","label":"Task Collection Name","type":"STRING","description":"The Firestore collection to keep track of the overall task of uploading embeddings","required":true,"default":"pgvector_task","immutable":true},{"param":"EMBEDDINGS_COLLECTION_NAME","label":"Embeddings Collection Name","type":"STRING","description":"The Firestore collection to keep track of the chunks of embeddings processed by tasks","required":true,"default":"pgvector_embeddings","immutable":true},{"param":"FIELDS","label":"Fields in a Document to index","type":"STRING","description":"Comma-separated list of field names to include in the search index. If you leave this blank, all fields will be indexed.","validationRegex":"^[a-zA-Z0-9_]+(,[a-zA-Z0-9_]+)*$","validationErrorMessage":"Field names may only use upper and lowercase letters from A to Z, underscores, or numbers, and may only be separated by commas. Trailing commas and empty variable names are not allowed.","immutable":true},{"param":"CLOUD_SQL_INSTANCE_NAME","label":"Cloud SQL Instance Name","type":"STRING","description":"The name of the cloud SQL instance to use for the index.","required":true,"immutable":true},{"param":"CLOUD_SQL_PASSWORD","label":"Cloud SQL Instance Password","type":"SECRET","description":"The password of the cloud SQL instance to use.","required":true,"immutable":true},{"param":"CLOUD_SQL_DB","label":"Cloud SQL DB Name","type":"STRING","description":"The name of the cloud SQL database","required":true,"default":"postgres","immutable":true},{"param":"LOCATION","label":"Location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west1","label":"Oregon (us-west1)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-south1","label":"Singapore (asia-southeast1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"immutable":true},{"param":"CLOUD_SQL_LOCATION","label":"Cloud SQL database location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west1","label":"Oregon (us-west1)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-south1","label":"Singapore (asia-southeast1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"immutable":true}],"readmeContent":"Documenting steps\n\n1. go to cloud console for your project, Cloud SQL, create instance of postgresql, e.g firestore-pgvector-demo\n\n2. use populate_firestore script in scripts.py\n\n3. `gcloud sql connect firestore-pgvector-demo --user=postgres ` in terminal to connect\n\n4. `CREATE EXTENSION IF NOT EXISTS vector;`\n\n5.\n```CREATE TABLE embeddings(\n    id INTEGER,\n    embedding vector(768)\n);\n```\n\nnow we have the required datatypes and table.\n\nCurrently in `main.py` there is a script to query using pgvector, but this assumes the environment is all set up etc. WIP to get this down.\n______\n\nDevelopment:\n\nUsed `poetry` to track dependencies, but not needed. You will have to `python3 -m venv venv` and `source venv/bin/activate`. Currently running scripts from `firestore-pgvector` directory, but this will change.","lifecycleEvents":[{"stage":"ON_INSTALL","processingMessage":"backfill documents into pgvector cloud sql","taskQueueTriggerFunction":"backfilltrigger"}],"displayName":"Firestore pgvector semantic search","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zÅ¾Ã -Ã¿][A-Za-zÅ½Å¾Ã€-Ã¿0-9_-]{0,62}:[A-Za-zÅ½Å¾Ã€-Ã¿0-9_-]{0,63},\\s*)*([a-zÅ¾Ã -Ã¿][A-Za-zÅ½Å¾Ã€-Ã¿0-9_-]{0,62}:[A-Za-zÅ½Å¾Ã€-Ã¿0-9_-]{0,63})$","advanced":true}],"tags":["ai","search","semantic-search","vector-search","text-search","nlp","llm","large-language-models","palm","embeddings","google-ai"]},"fetchTime":"2023-07-19T16:01:07.596110Z","lastOperationName":"projects/invertase--palm-demo/operations/841aef2a-9ffa-4fdd-8840-9aeba8263ee0","state":"ACTIVE"},"params":{"CLOUD_SQL_DB":"postgres","CLOUD_SQL_LOCATION":"us-central1","COLLECTION_NAME":"pgvector","FIELDS":"title","CLOUD_SQL_INSTANCE_NAME":"firestore-pgvector-demo","LOCATION":"us-central1","TASK_COLLECTION_NAME":"pgvector_task","EMBEDDINGS_COLLECTION_NAME":"pgvector_embeddings","CLOUD_SQL_PASSWORD":"projects/735953430365/secrets/ext-firestore-pgvector-CLOUD_SQL_PASSWORD/versions/1"},"systemParams":{"firebaseextensions.v1beta.function/memory":"256","firebaseextensions.v1beta.function/vpcConnectorEgressSettings":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","firebaseextensions.v1beta.function/minInstances":"0","firebaseextensions.v1beta.function/maxInstances":"3000"}},"lastOperationName":"projects/invertase--palm-demo/operations/495fbed8-5de0-4dbf-b342-cb15eaad58e2","serviceAccountEmail":"ext-firestore-pgvector-3@invertase--palm-demo.iam.gserviceaccount.com","lastOperationType":"CREATE","etag":"addd0a4369ce870bdfa08cd182dbeb3bdc6d115be8087ea1c0d2e534a99cd34a"}}
[debug] [2023-07-19T16:01:09.459Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/495fbed8-5de0-4dbf-b342-cb15eaad58e2 [none]
[debug] [2023-07-19T16:01:10.432Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/40e14ffc-3a93-4741-a093-b2dfa3552771 200
[debug] [2023-07-19T16:01:10.432Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/40e14ffc-3a93-4741-a093-b2dfa3552771 {"name":"projects/invertase--palm-demo/operations/40e14ffc-3a93-4741-a093-b2dfa3552771"}
[debug] [2023-07-19T16:01:10.433Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/495fbed8-5de0-4dbf-b342-cb15eaad58e2 200
[debug] [2023-07-19T16:01:10.433Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/495fbed8-5de0-4dbf-b342-cb15eaad58e2 {"name":"projects/invertase--palm-demo/operations/495fbed8-5de0-4dbf-b342-cb15eaad58e2"}
[debug] [2023-07-19T16:01:10.933Z] [LRO Poller] Retrying task index 0
[debug] [2023-07-19T16:01:10.934Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/40e14ffc-3a93-4741-a093-b2dfa3552771 [none]
[debug] [2023-07-19T16:01:10.935Z] [LRO Poller] Retrying task index 0
[debug] [2023-07-19T16:01:10.935Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/495fbed8-5de0-4dbf-b342-cb15eaad58e2 [none]
[debug] [2023-07-19T16:01:11.988Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/40e14ffc-3a93-4741-a093-b2dfa3552771 200
[debug] [2023-07-19T16:01:11.988Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/40e14ffc-3a93-4741-a093-b2dfa3552771 {"name":"projects/invertase--palm-demo/operations/40e14ffc-3a93-4741-a093-b2dfa3552771"}
[debug] [2023-07-19T16:01:12.000Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/495fbed8-5de0-4dbf-b342-cb15eaad58e2 200
[debug] [2023-07-19T16:01:12.000Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/495fbed8-5de0-4dbf-b342-cb15eaad58e2 {"name":"projects/invertase--palm-demo/operations/495fbed8-5de0-4dbf-b342-cb15eaad58e2"}
[debug] [2023-07-19T16:01:12.989Z] [LRO Poller] Retrying task index 0
[debug] [2023-07-19T16:01:12.990Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/40e14ffc-3a93-4741-a093-b2dfa3552771 [none]
[debug] [2023-07-19T16:01:13.000Z] [LRO Poller] Retrying task index 0
[debug] [2023-07-19T16:01:13.000Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/495fbed8-5de0-4dbf-b342-cb15eaad58e2 [none]
[debug] [2023-07-19T16:01:13.912Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/495fbed8-5de0-4dbf-b342-cb15eaad58e2 200
[debug] [2023-07-19T16:01:13.912Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/495fbed8-5de0-4dbf-b342-cb15eaad58e2 {"name":"projects/invertase--palm-demo/operations/495fbed8-5de0-4dbf-b342-cb15eaad58e2"}
[debug] [2023-07-19T16:01:13.926Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/40e14ffc-3a93-4741-a093-b2dfa3552771 200
[debug] [2023-07-19T16:01:13.926Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/40e14ffc-3a93-4741-a093-b2dfa3552771 {"name":"projects/invertase--palm-demo/operations/40e14ffc-3a93-4741-a093-b2dfa3552771"}
[debug] [2023-07-19T16:01:15.914Z] [LRO Poller] Retrying task index 0
[debug] [2023-07-19T16:01:15.914Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/495fbed8-5de0-4dbf-b342-cb15eaad58e2 [none]
[debug] [2023-07-19T16:01:15.928Z] [LRO Poller] Retrying task index 0
[debug] [2023-07-19T16:01:15.928Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/40e14ffc-3a93-4741-a093-b2dfa3552771 [none]
[debug] [2023-07-19T16:01:16.790Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/495fbed8-5de0-4dbf-b342-cb15eaad58e2 200
[debug] [2023-07-19T16:01:16.790Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/495fbed8-5de0-4dbf-b342-cb15eaad58e2 {"name":"projects/invertase--palm-demo/operations/495fbed8-5de0-4dbf-b342-cb15eaad58e2"}
[debug] [2023-07-19T16:01:16.791Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/40e14ffc-3a93-4741-a093-b2dfa3552771 200
[debug] [2023-07-19T16:01:16.792Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/40e14ffc-3a93-4741-a093-b2dfa3552771 {"name":"projects/invertase--palm-demo/operations/40e14ffc-3a93-4741-a093-b2dfa3552771"}
[debug] [2023-07-19T16:01:20.791Z] [LRO Poller] Retrying task index 0
[debug] [2023-07-19T16:01:20.791Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/495fbed8-5de0-4dbf-b342-cb15eaad58e2 [none]
[debug] [2023-07-19T16:01:20.792Z] [LRO Poller] Retrying task index 0
[debug] [2023-07-19T16:01:20.793Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/40e14ffc-3a93-4741-a093-b2dfa3552771 [none]
[debug] [2023-07-19T16:01:21.663Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/495fbed8-5de0-4dbf-b342-cb15eaad58e2 200
[debug] [2023-07-19T16:01:21.663Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/495fbed8-5de0-4dbf-b342-cb15eaad58e2 {"name":"projects/invertase--palm-demo/operations/495fbed8-5de0-4dbf-b342-cb15eaad58e2"}
[debug] [2023-07-19T16:01:21.665Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/40e14ffc-3a93-4741-a093-b2dfa3552771 200
[debug] [2023-07-19T16:01:21.665Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/40e14ffc-3a93-4741-a093-b2dfa3552771 {"name":"projects/invertase--palm-demo/operations/40e14ffc-3a93-4741-a093-b2dfa3552771"}
[debug] [2023-07-19T16:01:29.663Z] [LRO Poller] Retrying task index 0
[debug] [2023-07-19T16:01:29.663Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/495fbed8-5de0-4dbf-b342-cb15eaad58e2 [none]
[debug] [2023-07-19T16:01:29.666Z] [LRO Poller] Retrying task index 0
[debug] [2023-07-19T16:01:29.666Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/40e14ffc-3a93-4741-a093-b2dfa3552771 [none]
[debug] [2023-07-19T16:01:30.513Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/495fbed8-5de0-4dbf-b342-cb15eaad58e2 200
[debug] [2023-07-19T16:01:30.513Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/495fbed8-5de0-4dbf-b342-cb15eaad58e2 {"name":"projects/invertase--palm-demo/operations/495fbed8-5de0-4dbf-b342-cb15eaad58e2"}
[debug] [2023-07-19T16:01:30.549Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/40e14ffc-3a93-4741-a093-b2dfa3552771 200
[debug] [2023-07-19T16:01:30.549Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/projects/invertase--palm-demo/operations/40e14ffc-3a93-4741-a093-b2dfa3552771 {"name":"projects/invertase--palm-demo/operations/40e14ffc-3a93-4741-a093-b2dfa3552771"}
